---
import Layout from '../../layouts/Layout.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';

const folders = ['awakening', 'feelings'];

const folderData = await Promise.all(
  folders.map(async (folder) => {
    const posts = await getCollection('blog', (post) => post.id.startsWith(folder));
    posts.sort((a, b) => {
      // Extract the number from the file name (assuming format like "01-title.md")
      const aNum = parseInt(a.id.split('-')[0]);
      const bNum = parseInt(b.id.split('-')[0]);
      return aNum - bNum;
    });
    const firstPost = posts[0];
    const image = firstPost?.data.heroImage || '/default-whisper-image.jpg';
    return { folder, image, posts };
  })
);
---

<Layout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-8 text-center">Whispers</h1>
    <ul class="grid grid-cols-1 md:grid-cols-2 gap-8">
      {folderData.map(({ folder, image }) => (
        <li class="whisper-item">
          <a href={`/whispers/${folder}`} class="whisper-link">
            <img src={image} alt={folder} class="whisper-icon" />
            <span class="whisper-text">{folder}</span>
          </a>
        </li>
      ))}
    </ul>
  </div>
</Layout>

<section class="mb-12">
  <h2 class="text-3xl font-bold mb-4">Recent Whispers</h2>
  {folderData.map(({ folder, posts }) => (
    <div>
      <h3 class="text-2xl font-bold mb-2 capitalize">{folder}</h3>
      <ul>
        {posts.map((post) => (
          <li id={post.id}>
            <a href={`/blog/${post.slug}`} class="text-blue-500 hover:underline">
              {post.data.title}
            </a>
          </li>
        ))}
      </ul>
    </div>
  ))}
</section>

<style>
  .whisper-item {
    position: relative;
    overflow: hidden;
    border-radius: 15px;
    transition: all 0.3s ease;
  }

  .whisper-link {
    display: flex;
    align-items: center;
    padding: 2rem;
    text-decoration: none;
    color: inherit;
    font-size: 1.5em;
    font-weight: bold;
    text-transform: capitalize;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  }

  .whisper-icon {
    width: 50px;
    height: 50px;
    object-fit: cover;
    border-radius: 50%;
    margin-right: 1rem;
  }

  .whisper-text {
    position: relative;
    z-index: 1;
  }

  .whisper-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.2));
    transform: translateY(100%);
    transition: transform 0.3s ease;
  }

  .whisper-item:hover::before {
    transform: translateY(0);
  }

  .whisper-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 35px 0 rgba(31, 38, 135, 0.37);
  }

  @media (prefers-reduced-motion: reduce) {
    .whisper-item, .whisper-item::before {
      transition: none;
    }
  }
</style>
