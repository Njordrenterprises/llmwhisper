---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
---

<header class="bg-base-200 text-base-content py-4 sticky top-0 z-50 mb-4 sm:mb-0">
  <div class="container mx-auto px-4">
    <div class="flex flex-col sm:flex-row items-center justify-between space-y-4 sm:space-y-0">
      <a href="/" class="text-2xl font-bold">{SITE_TITLE}</a>
      <div class="flex flex-col items-center">
        <div class="flex gap-2 text-base font-mono bg-base-300 pt-3 pb-1 px-2 rounded">
          <div id="current-date"></div>
          <div id="live-time"></div>
          <div id="session-time"></div>
          <span class="text-xs text-accent mt-1">logtime</span>
        </div>
      </div>
      <nav class="flex flex-wrap justify-center items-center gap-4">
        <HeaderLink href="/">Home</HeaderLink>
        <HeaderLink href="/whispers">Whispers</HeaderLink>
        <a href="https://twitter.com/tangledcircuit" target="_blank" class="hover:text-info">
          <span class="sr-only">Twitter</span>
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="fill-current"><path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"></path></svg>
        </a>
        <div id="theme-select" class="relative">
          <button class="select select-bordered select-sm overflow-hidden nav-item">
            <span id="current-theme">Light</span>
          </button>
          <div id="theme-options" class="absolute top-full left-0 w-40 bg-base-100 shadow-lg rounded-b-lg overflow-y-auto hidden z-50" style="max-height: 200px;">
            <!-- Theme options will be dynamically populated -->
          </div>
        </div>
      </nav>
    </div>
  </div>
</header>

<script>
  function setupThemeSelector() {
    const themeSelect = document.getElementById('theme-select');
    const themeOptions = document.getElementById('theme-options');
    const currentTheme = document.getElementById('current-theme');
    const htmlElement = document.documentElement;

    const themes = [
      "light", "dark", "synthwave", "retro", "cyberpunk",
      "valentine", "halloween", "garden", "forest", "aqua",
      "black", "luxury", "dracula", "autumn", "business",
      "acid", "lemonade", "night", "coffee", "dim", "nord", "sunset"
    ];

    function populateThemeOptions() {
      if (themeOptions) {
        themeOptions.innerHTML = '';
        themes.forEach(theme => {
          const option = document.createElement('div');
          option.className = 'theme-option';
          option.dataset.theme = theme;
          option.textContent = theme.charAt(0).toUpperCase() + theme.slice(1);
          themeOptions.appendChild(option);
        });
      }
    }

    function setInitialTheme() {
      const savedTheme = localStorage.getItem('theme') || 'synthwave';
      htmlElement.setAttribute('data-theme', savedTheme);
      if (currentTheme) currentTheme.textContent = savedTheme.charAt(0).toUpperCase() + savedTheme.slice(1);
    }

    function changeTheme(newTheme: string) {
      htmlElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
      if (currentTheme) currentTheme.textContent = newTheme.charAt(0).toUpperCase() + newTheme.slice(1);
      themeOptions?.classList.add('hidden');
    }

    function setupEventListeners() {
      themeSelect?.querySelector('button')?.addEventListener('click', (e) => {
        e.stopPropagation();
        themeOptions?.classList.toggle('hidden');
      });

      themeOptions?.addEventListener('click', (e) => {
        const target = e.target as HTMLElement;
        if (target?.classList.contains('theme-option')) {
          changeTheme(target.dataset.theme || 'synthwave');
        }
      });

      document.addEventListener('click', (e) => {
        if (e.target instanceof Node && !themeSelect?.contains(e.target)) {
          themeOptions?.classList.add('hidden');
        }
      });
    }

    populateThemeOptions();
    setInitialTheme();
    setupEventListeners();
  }

  // Run the setup function immediately
  setupThemeSelector();

  // Re-run the setup function after each navigation
  document.addEventListener('astro:after-swap', setupThemeSelector);
</script>

