---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { ViewTransitions } from 'astro:transitions';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  heroImage?: string;
}

const { title = SITE_TITLE, description = SITE_DESCRIPTION, image } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={image} />
    <ViewTransitions />
    <script is:inline>
      const savedTheme = localStorage.getItem('theme') || 'synthwave';
      document.documentElement.setAttribute('data-theme', savedTheme);
    </script>
  </head>
  <body class="flex flex-col min-h-screen">
    <Header transition:persist />
    <main class="flex-grow container mx-auto px-4 py-8" transition:animate="fade">
      <slot />
    </main>
    <Footer transition:persist />
  </body>
</html>

<script is:inline>
  function updateDateTime() {
    const now = new Date();
    
    const currentDateElement = document.getElementById('current-date');
    if (currentDateElement) {
      currentDateElement.textContent = now.toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric' });
    }
    
    const liveTimeElement = document.getElementById('live-time');
    if (liveTimeElement) {
      liveTimeElement.textContent = now.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: false });
    }
    
    const sessionTimeElement = document.getElementById('session-time');
    if (sessionTimeElement) {
      const sessionStartTime = localStorage.getItem('sessionStartTime') || Date.now().toString();
      localStorage.setItem('sessionStartTime', sessionStartTime);
      const sessionDuration = now.getTime() - Number(sessionStartTime);
      const minutes = Math.floor(sessionDuration / 60000);
      const seconds = Math.floor((sessionDuration % 60000) / 1000);
      sessionTimeElement.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
    }
  }

  // Run immediately and then every second
  updateDateTime();
  setInterval(updateDateTime, 1000);

  // Update on view transitions
  document.addEventListener('astro:after-swap', updateDateTime);
</script>
